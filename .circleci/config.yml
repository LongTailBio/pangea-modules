version: 2

# Common step for adding Longtail PyPI index
pypi_step: &pypi_step
  name: Init .pypirc
  command: |
    echo -e "[distutils]" >> ~/.pypirc
    echo -e "index-servers =" >> ~/.pypirc
    echo -e "    pypi" >> ~/.pypirc
    echo -e "    longtailbio" >> ~/.pypirc
    echo -e "" >> ~/.pypirc
    echo -e "[pypi]" >> ~/.pypirc
    echo -e "" >> ~/.pypirc
    echo -e "[longtailbio]" >> ~/.pypirc
    echo -e "repository: https://pypi.longtailbio.com" >> ~/.pypirc
    echo -e "username: $LT_PYPI_USERNAME" >> ~/.pypirc
    echo -e "password: $LT_PYPI_PASSWORD" >> ~/.pypirc
    mkdir ~/.pip
    echo -e "[global]" >> ~/.pip/pip.conf
    echo -e "extra-index-url = https://pypi.longtailbio.com/simple/" >> ~/.pip/pip.conf


# Common step for exiting a job if there are no changes for the specified module
abort_if_no_change: &abort_if_no_change
  name: Abort if no changes
  command: |
    set +x

    if [ $CIRCLE_BRANCH = "master" ] || [ $CIRCLE_BRANCH = "develop" ] ; then
      WORD_COUNT=$(git diff HEAD@{1} modules/$MODULE_NAME | wc -l)
    elif [[ $CIRCLE_BRANCH ==  feature/* ]] ; then
      git fetch origin develop:develop
      WORD_COUNT=$(git diff develop modules/$MODULE_NAME | wc -l)
    elif [[ $CIRCLE_BRANCH ==  hotfix/* ]] ; then
      git fetch origin master:master
      WORD_COUNT=$(git diff master modules/$MODULE_NAME | wc -l)
    else
      echo "Invalid branch name pattern!"
      exit 1
    fi

    if [ $WORD_COUNT -eq 0 ] ; then
      echo "No differences for this module. Skipping."
      circleci step halt
    fi


# Common step for adding Longtail PyPI index
default_test: &default_test
  docker:
    - image: circleci/python:3.6

  # CircleCI does not allow expansion of the path so we'll have to `cd`
  # into the correct submodule directory for each `run` step
  working_directory: ~/project

  steps:
    - checkout

    - run: *abort_if_no_change

    - restore_cache:
        keys:
          # CIRCLE_JOB is the best approximation of MODULE_NAME env var
          - v1-dependencies-{{ .Environment.CIRCLE_JOB }}-
          - v1-dependencies-

    - run:
        name: Install Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
          cd modules/$MODULE_NAME
          pip install -r requirements.txt

    - save_cache:
        paths:
          - ./venv
        # We cannot use the {{ checksum }} helper for each submodule.
        # Instead caches are saved with {{ epoch }} to ensure they are
        # updated for each save.
        key: v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}

    - run:
        name: Lint module
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          pylint pangea_modules/$MODULE_NAME


# Common step for adding Longtail PyPI index
default_publish: &default_publish
  docker:
    - image: circleci/python:3.6

  # CircleCI does not allow expansion of the path so we'll have to `cd`
  # into the correct submodule directory for each `run` step
  working_directory: ~/project

  steps:
    - checkout

    - run: *abort_if_no_change

    - restore_cache:
        keys:
          # CIRCLE_JOB is the best approximation of MODULE_NAME env var
          - v1-dependencies-{{ .Environment.CIRCLE_JOB }}-
          - v1-dependencies-

    - run:
        name: Install Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
          cd modules/$MODULE_NAME
          pip install -r requirements.txt

    - save_cache:
        paths:
          - ./venv
        # We cannot use the {{ checksum }} helper for each submodule.
        # Instead caches are saved with {{ epoch }} to ensure they are
        # updated for each save.
        key: v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}

    - run: *pypi_step

    - run:
        name: Build package
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          python setup.py bdist_wheel --universal
          python setup.py sdist

    - run:
        name: Upload to Longtail PyPi
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          twine upload -r longtailbio dist/*


# CircleCI Jobs
jobs:
  test_base:
    <<: *default_test
    environment:
      MODULE_NAME: base

  publish_base:
    <<: *default_publish
    environment:
      MODULE_NAME: base

  test_humann2:
    <<: *default_test
    environment:
      MODULE_NAME: humann2

  publish_humann2:
    <<: *default_publish
    environment:
      MODULE_NAME: humann2

  test_krakenhll:
    <<: *default_test
    environment:
      MODULE_NAME: krakenhll

  publish_krakenhll:
    <<: *default_publish
    environment:
      MODULE_NAME: krakenhll

workflows:
  version: 2

  base_cd:
    jobs:
      - test_base
      - publish_base:
          context: longtail-pypi
          filters:
            branches:
              only: master
          requires:
            - test_base

      - test_humann2
      - publish_humann2:
          context: longtail-pypi
          filters:
            branches:
              only: master
          requires:
            - test_humann2

      - test_krakenhll
      - publish_krakenhll:
          context: longtail-pypi
          filters:
            branches:
              only: master
          requires:
            - test_krakenhll
