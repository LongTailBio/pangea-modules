version: 2

# Common step for adding Longtail PyPI index
pypi_step: &pypi_step
  name: Init .pypirc
  command: |
    echo -e "[distutils]" >> ~/.pypirc
    echo -e "index-servers =" >> ~/.pypirc
    echo -e "    pypi" >> ~/.pypirc
    echo -e "    longtailbio" >> ~/.pypirc
    echo -e "" >> ~/.pypirc
    echo -e "[pypi]" >> ~/.pypirc
    echo -e "" >> ~/.pypirc
    echo -e "[longtailbio]" >> ~/.pypirc
    echo -e "repository: https://pypi.longtailbio.com" >> ~/.pypirc
    echo -e "username: $LT_PYPI_USERNAME" >> ~/.pypirc
    echo -e "password: $LT_PYPI_PASSWORD" >> ~/.pypirc
    mkdir ~/.pip
    echo -e "[global]" >> ~/.pip/pip.conf
    echo -e "extra-index-url = https://pypi.longtailbio.com/simple/" >> ~/.pip/pip.conf


# Common step for exiting a job if there are no changes for the specified module
abort_if_no_change: &abort_if_no_change
  name: Abort if no changes
  command: |
    # Build every module for tagged releases
    if [ -n "$CIRCLE_TAG" ] ; then exit 0; fi

    if [ $CIRCLE_BRANCH = "master" ] || [ $CIRCLE_BRANCH = "develop" ] ; then
      WORD_COUNT=$(git diff --name-only HEAD@{1} modules/$MODULE_NAME | wc -l)
    elif [[ $CIRCLE_BRANCH ==  feature/* ]] ; then
      git fetch origin develop:develop
      WORD_COUNT=$(git diff --name-only develop modules/$MODULE_NAME | wc -l)
    elif [[ $CIRCLE_BRANCH ==  hotfix/* ]] || [[ $CIRCLE_BRANCH ==  release/* ]] ; then
      git fetch origin master:master
      WORD_COUNT=$(git diff --name-only master modules/$MODULE_NAME | wc -l)
    else
      echo "Invalid branch name pattern!"
      exit 1
    fi

    if [ $WORD_COUNT -eq 0 ] ; then
      echo "No differences for this module. Skipping."
      circleci step halt
    fi


# Common step for adding Longtail PyPI index
default_test: &default_test
  docker:
    - image: circleci/python:3.6

  # CircleCI does not allow expansion of the path so we'll have to `cd`
  # into the correct submodule directory for each `run` step
  working_directory: ~/project

  steps:
    - checkout

    - run: *abort_if_no_change

    - restore_cache:
        keys:
          # CIRCLE_JOB is the best approximation of MODULE_NAME env var
          - v1-dependencies-{{ .Environment.CIRCLE_JOB }}-
          - v1-dependencies-

    - run:
        name: Install Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
          cd modules/$MODULE_NAME
          pip install -r requirements.txt

    - save_cache:
        paths:
          - ./venv
        # We cannot use the {{ checksum }} helper for each submodule.
        # Instead caches are saved with {{ epoch }} to ensure they are
        # updated for each save.
        key: v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}

    - run:
        name: Lint module
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          pylint pangea_modules/$MODULE_NAME tests

    - run:
        name: Run tests
        command: |
          set +e
          . venv/bin/activate
          python -m pytest --color=yes modules/$MODULE_NAME -s
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 5 ] ; then
            # https://docs.pytest.org/en/latest/usage.html#possible-exit-codes
            echo "Squashing pytest's non-zero exit code for 'no tests run'."
            exit 0
          else
            exit $EXIT_CODE
          fi


# Common step for adding Longtail PyPI index
default_publish: &default_publish
  docker:
    - image: circleci/python:3.6

  # CircleCI does not allow expansion of the path so we'll have to `cd`
  # into the correct submodule directory for each `run` step
  working_directory: ~/project

  steps:
    - checkout

    - run: *abort_if_no_change

    - restore_cache:
        keys:
          # CIRCLE_JOB is the best approximation of MODULE_NAME env var
          - v1-dependencies-{{ .Environment.CIRCLE_JOB }}-
          - v1-dependencies-

    - run:
        name: Install Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
          cd modules/$MODULE_NAME
          pip install -r requirements.txt

    - save_cache:
        paths:
          - ./venv
        # We cannot use the {{ checksum }} helper for each submodule.
        # Instead caches are saved with {{ epoch }} to ensure they are
        # updated for each save.
        key: v1-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}

    - run: *pypi_step

    - run:
        name: Build package
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          python setup.py bdist_wheel --universal
          python setup.py sdist

    - run:
        name: Upload to Longtail PyPi
        command: |
          . venv/bin/activate
          cd modules/$MODULE_NAME
          twine upload -r longtailbio dist/*


# CircleCI Jobs
jobs:
  # ----- AGS -----
  test_ags:
    <<: *default_test
    environment:
      MODULE_NAME: ags

  publish_ags:
    <<: *default_publish
    environment:
      MODULE_NAME: ags

  # ----- Ancestry -----
  test_ancestry:
    <<: *default_test
    environment:
      MODULE_NAME: ancestry

  publish_ancestry:
    <<: *default_publish
    environment:
      MODULE_NAME: ancestry

  # ----- Ancestry Data -----
  test_ancestry_data:
    <<: *default_test
    environment:
      MODULE_NAME: ancestry_data

  publish_ancestry_data:
    <<: *default_publish
    environment:
      MODULE_NAME: ancestry_data

  # ----- Base -----
  test_base:
    <<: *default_test
    environment:
      MODULE_NAME: base

  publish_base:
    <<: *default_publish
    environment:
      MODULE_NAME: base

  # ----- KrakenHLL Data -----
  test_krakenhll_data:
    <<: *default_test
    environment:
      MODULE_NAME: krakenhll_data

  publish_krakenhll_data:
    <<: *default_publish
    environment:
      MODULE_NAME: krakenhll_data

  # ----- Metaphlan2 Data -----
  test_metaphlan2_data:
    <<: *default_test
    environment:
      MODULE_NAME: metaphlan2_data

  publish_metaphlan2_data:
    <<: *default_publish
    environment:
      MODULE_NAME: metaphlan2_data

  # ----- Microbe Census Data -----
  test_microbe_census_data:
    <<: *default_test
    environment:
      MODULE_NAME: microbe_census_data

  publish_microbe_census_data:
    <<: *default_publish
    environment:
      MODULE_NAME: microbe_census_data

  # ----- Sample Similarity -----
  test_sample_similarity:
    <<: *default_test
    environment:
      MODULE_NAME: sample_similarity

  publish_sample_similarity:
    <<: *default_publish
    environment:
      MODULE_NAME: sample_similarity

  # ----- Top Taxa -----
  test_top_taxa:
    <<: *default_test
    environment:
      MODULE_NAME: top_taxa

  publish_top_taxa:
    <<: *default_publish
    environment:
      MODULE_NAME: top_taxa


test_tpl: &test_tpl
  filters:
    tags:
      only: /^v.*/

publish_tpl: &publish_tpl
  context: longtail-pypi
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

workflows:
  version: 2

  # Run parallel pipelines for each tool, skipping if there are no changes
  base_cd:
    jobs:
      - test_ags:
          <<: *test_tpl
      - publish_ags:
          <<: *publish_tpl
          requires:
            - test_ags

      - test_ancestry:
          <<: *test_tpl
      - publish_ancestry:
          <<: *publish_tpl
          requires:
            - test_ancestry

      - test_ancestry_data:
          <<: *test_tpl
      - publish_ancestry_data:
          <<: *publish_tpl
          requires:
            - test_ancestry_data

      - test_base:
          <<: *test_tpl
      - publish_base:
          <<: *publish_tpl
          requires:
            - test_base

      - test_krakenhll_data:
          <<: *test_tpl
      - publish_krakenhll_data:
          <<: *publish_tpl
          requires:
            - test_krakenhll_data

      - test_metaphlan2_data:
          <<: *test_tpl
      - publish_metaphlan2_data:
          <<: *publish_tpl
          requires:
            - test_metaphlan2_data

      - test_microbe_census_data:
          <<: *test_tpl
      - publish_microbe_census_data:
          <<: *publish_tpl
          requires:
            - test_microbe_census_data

      - test_sample_similarity:
          <<: *test_tpl
      - publish_sample_similarity:
          <<: *publish_tpl
          requires:
            - test_sample_similarity

      - test_top_taxa:
          <<: *test_tpl
      - publish_top_taxa:
          <<: *publish_tpl
          requires:
            - test_top_taxa
